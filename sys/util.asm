;Takes the string at ES:SI and uppercases it
DOSILE_UPCASE:
	PUSHA
	CALL DOSILE_STRLEN
	MOV CX, AX
	MOV DI, SI
UPCASE_LOOP:
	LODSB
	CMP AL, 'a'
	JL UPCASE_LOOP_END
	CMP AL, 'z'
	JG UPCASE_LOOP_END
	ADD AL, ('A' - 'a')
UPCASE_LOOP_END:
	STOSB
	LOOP UPCASE_LOOP
	POPA
	RET

;Gets the length of the string at ES:SI
;Returns AX=Length
DOSILE_STRLEN:
	PUSH SI
	PUSH CX
	XOR CX, CX
STRLEN_LOOP:
	LODSB
	INC CX
	OR AL, AL
	JNZ STRLEN_LOOP
	MOV AX, CX
	DEC AX
	POP CX
	POP SI
	RET

;Copies string at ES:SI to ES:DI for CX characters
DOSILE_STRNCPY:
	PUSHA
STRNCPY_LOOP:
	LODSB
	STOSB
	LOOP STRNCPY_LOOP
	POPA
	RET

;Fills buffer at ES:DI with AL for CX bytes
DOSILE_MEMSET:
	PUSHA
MEMSET_LOOP:
	STOSB
	LOOP MEMSET_LOOP
	POPA
	RET

;Replaces BL in string at ES:SI with DL for CX bytes
DOSILE_CSUB:
	PUSHA
CSUB_LOOP:
	LODSB
	CMP AL, BL
	JNZ CSUB_LOOP_END
	DEC SI
	MOV BYTE [ES:SI], DL
	INC SI
CSUB_LOOP_END:
	LOOP CSUB_LOOP
	POPA
	RET

;Converts an 8.3 string to an 11 character FAT name at ES:SI
;ASSUMES THE STRING IS IN A 12 CHARACTER BUFFER
DOSILE_TOFAT:
	PUSHA
	PUSH SI
	MOV DI, TOFAT_BUFFER
	MOV CX, 11
	MOV AL, ' '
	CALL DOSILE_MEMSET
	CALL DOSILE_STRNCPY
	MOV CX, 8
TOFAT_LOOP:
	OR AL, AL
	JZ TOFAT_DONE
	LODSB
	STOSB
	CMP AL, '.'
	LOOPNZ TOFAT_LOOP
	MOV DI, TOFAT_EXT
	MOV CX, 3
TOFAT_LOOP2:
	LODSB
	STOSB
	OR AL, AL
	LOOPNZ TOFAT_LOOP2
TOFAT_DONE:
	POP SI
	MOV CX, 11
	MOV BL, '.'
	MOV DL, ' '
	CALL DOSILE_CSUB
	MOV DI, SI
	MOV SI, TOFAT_BUFFER
	MOV CX, 11
	CALL DOSILE_STRNCPY
	POPA
	RET

TOFAT_BUFFER:	DB "12345678"
TOFAT_EXT:	DB "123",0
